server {
        listen      80;
        listen      [::]:80;
        server_name localhost www.localhost;
        return 301 https://$server_name$request_uri;
}
server {
    listen              443 ssl;
    listen              [::]:443 ssl;
    server_name         localhost www.localhost;
    index               index.html index.htm index.php index.nginx-debian.html;
    ssl_certificate     /etc/ssl/certs/domain.crt;
    ssl_certificate_key /etc/ssl/certs/domain.key;
    root                /var/www/html;
    client_max_body_size 20m;
    location / {
        autoindex on;
    }

    location = / {
        rewrite / https://localhost/wordpress permanent;
    }

    location /wordpress {
        alias /var/www/html/wordpress/;
        #try_files $uri $uri/ /wordpress/index.php?$args;
        autoindex on;
    }

    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
    }
}

# server {
#     listen              443 ssl;
#     listen              [::]:443 ssl;
#     server_name         wordpress.localhost;
#     index               index.html index.htm index.php index.nginx-debian.html;
#     ssl_certificate     /etc/ssl/certs/domain.crt;
#     ssl_certificate_key /etc/ssl/certs/domain.key;
#     root                /var/www/html/wordpress;
#     location / {
#         autoindex on;
#     }
#     # location /wordpress {
#     #    try_files $uri $uri/ /wordpress/index.php?$args;
#     #    autoindex on;
#     # }
#     location ~ \.php$ {
#         include snippets/fastcgi-php.conf;
#         fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
#     }
# }


# server {
# 	listen 80; #default http port
# 	listen [::]:80;

# 	listen 443 ssl;    
# 	listen [::]:443 ssl;

# 	ssl_certificate /etc/ssl/certs/domain.crt ;   
# 	ssl_certificate_key /etc/ssl/certs/domain.key;

# 	root /var/www/html; #where u start to read files
# 	index index.php index.html index.htm index.nginx-debian.html; #what file it selects by default in the current folder
	
# 	server_name localhost www.localhost; #what adress its running on/listening to
# 	location / {
#             try_files $uri $uri/ =404;
#     }
	
# 	location ~ \.php$ {
#         include snippets/fastcgi-php.conf;
#         fastcgi_pass unix:/run/php/php7.3-fpm.sock; #make nginx understand php
#     }
# }

# server {
# 	listen              443 ssl;
# 	#server_name localhost www.localhost;
# 	ssl_certificate     ./srcs/domain.crt;
# 	ssl_certificate_key ./srcs/domain.key;

# }

















##server {
     ##   listen 80 default_server;
     ##   listen [::]:80 default_server;

        # SSL configuration
        #
        # listen 443 ssl default_server;
        # listen [::]:443 ssl default_server;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        # include snippets/snakeoil.conf;
	##	 root /var/www/html;

        # Add index.php to the list if you are using PHP
   ##     index index.html index.htm index.nginx-debian.html;

   ##     server_name _;

    ##    location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
   ##             try_files $uri $uri/ =404;
  ##      }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
		#       fastcgi_pass 127.0.0.1:9000;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
##}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
  # Add index.php to the list if you are using PHP
    ##    index index.html index.htm index.nginx-debian.html;

  ##      server_name _;

 ##       location / {
                # First attempt to serve request as file, then
                # as directory, then fall back to displaying a 404.
 ##               try_files $uri $uri/ =404;
 ##       }

        # pass PHP scripts to FastCGI server
        #
        #location ~ \.php$ {
        #       include snippets/fastcgi-php.conf;
        #
        #       # With php-fpm (or other unix sockets):
        #       fastcgi_pass unix:/run/php/php7.3-fpm.sock;
        #       # With php-cgi (or other tcp sockets):
        #       fastcgi_pass 127.0.0.1:9000;
#}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #       deny all;
        #}
##}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#       listen 80;
#       listen [::]:80;
#
#       server_name example.com;
#
#       root /var/www/example.com;
#       index index.html;
#
#       location / {
#               try_files $uri $uri/ =404;
#       }
#}
